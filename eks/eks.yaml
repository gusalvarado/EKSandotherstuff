AWSTemplateFormatVersion: 2010-09-09
Description: Whatever this is

Parameters:
  Name:
    Type: String
    Default: eks-cluster
    Description: The name of the EKS cluster
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID
    Default: vpc-0a5e30813d32f424b
  EKSSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The first EKS subnet
    Default: subnet-0455886f4083ba6e8
  EKSSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The second EKS subnet
    Default: subnet-00e13f655559d4378
  EKSSubnet3:
    Type: AWS::EC2::Subnet::Id
    Description: The third EKS subnet
    Default: subnet-064fc70e074595123

Resources:
  Type: AWS::EKS::Cluster
  Properties:
    Name: !Ref Name
    RoleArn: !GetAtt EKSClusterRole.Arn
    ResourcesVpcConfig:
      SecurityGroupIds:
        - !Ref EKSSecurityGroup
      SubnetIds:
        - !Ref EKSSubnet1
        - !Ref EKSSubnet2
        - !Ref EKSSubnet3
      EndpointPublicAccess: true
      EndpointPrivateAccess: true
      PublicAccessCidrs:
        - 172.31.0.0/16
    Version: "1.14"
    Logging:
      ClusterLogging:
        - Enabled: true
          Types:
            - api
            - audit
            - authenticator
            - controllerManager
            - scheduler
    Tags:
      - Key: Name
        Value: !Ref Name
        Key: Environment
        Value: localhost
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - eks.amazonaws.com
          Action:
            - sts:AssumeRole
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupDescription: EKS Security Group
    VpcId: !Ref VPC
    SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0